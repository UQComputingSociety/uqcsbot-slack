name: Docker Publish and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # Python and associated Poetry
  PYTHON_VERSION: 3.8
  POETRY_VERSION: 1.1.8

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Poetry ${{ env.POETRY_VERSION }}
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: | 
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
          flavor: |
            latest=false

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Only run deploy script on main.
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - run: ./deploy.sh
        env:
          DOCKER_CA: ${{ secrets.DOCKER_CA }}
          DOCKER_KEY: ${{ secrets.DOCKER_KEY }}
          DOCKER_CERT: ${{ secrets.DOCKER_CERT }}
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
          BOT_TOKEN: ${{ secrets.DEPLOY_BOT_TOKEN }}
          POSTGRES_URI: ${{ secrets.DEPLOY_POSTGRES_URI }}
